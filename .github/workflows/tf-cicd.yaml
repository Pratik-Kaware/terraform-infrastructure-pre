name: Terraform CICD
on:
  push:
    paths:
      - 'terraform/**'
      - '.github/workflows/tf-cicd.yaml'
      - 'terraform.tfvars'
      - '**/userdata.sh'
  pull_request:
    paths:
      - 'terraform/**'
      - '.github/workflows/tf-cicd.yaml'
      - 'terraform.tfvars'
      - '**/userdata.sh'
jobs:
  terraform-plan:
    name: Terraform-Plan
    runs-on: ubuntu-latest
    outputs:
      plan-exists: ${{ steps.check-plan.outputs.exists }}
    
    steps:
      - name: Checout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version:  1.6.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Terraform Init
        run: terraform init -backend-config="envs/pre/backend.conf"
        working-directory: envs/pre

      - name: Terraform Validate
        run: terraform validate
        working-directory: envs/pre

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: envs/pre

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: envs/pre

      - name: Show Plan
        run: terraform show -no-color tfplan
  
  terraform-apply:
    name: Terraform Apply (Manual Approval)
    needs: terraform-plan
    runs-on: ubuntu-latest 
    if: github.event_name == 'workflow_dispatch'

    environment:
      name: pre
      url: https://console.aws.amazon.com/

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Configure AWS creds 
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Terraform Init
        run: terraform init -backend-config="envs/pre/backend.conf"
        working-directory: envs/pre

      - name: Download Plan Artifact
        uses: actions/upload-artifact@v4
        with: 
          name: tfplan
          path: envs/pre

      - name: Terraform Apply 
        run : terraform apply tfplan
        working-directory: envs/pre

  terraform-destroy:
    name: Terraform Destroy (Manual Approval)
    needs: terraform-apply
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    environment:
      name: pre
      url: https://console.aws.amazon.com/

    steps:

      - name: Manual Approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GH_TOKEN }}
          approvers: Pratik-Kaware  
          issue-title: 'Terraform Apply Approval'
          issue-body: 'Please approve production apply.'
          label: 'approved'

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Configure AWS creds 
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Terraform Init
        run: terraform init -backend-config="envs/pre/backend.conf"
        working-directory: envs/pre

      - name: Download Plan Artifact
        uses: actions/upload-artifact@v4
        with: 
          name: tfplan
          path: envs/pre

      - name: Terraform Destroy 
        run : terraform destroy tfplan
        working-directory: envs/pre